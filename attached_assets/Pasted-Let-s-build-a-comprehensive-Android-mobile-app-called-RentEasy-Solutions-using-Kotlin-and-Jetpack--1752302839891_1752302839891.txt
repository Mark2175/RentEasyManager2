Let's build a comprehensive Android mobile app called "RentEasy Solutions" using Kotlin and Jetpack Compose, designed for the Google Play Store. The app facilitates rentals in Domlur, Bangalore, expanding to all of Bangalore and potentially other cities like Mumbai and Hyderabad, aiming for 160,000 houses by Year 5, capturing 25% of tenants with innovative solutions. The core business model is a full brokerage fee of one month's rent (minimum 25000 INR per tenant for 1 bHK upto 4L for 4BHK in bangalore) collected via the app, which includes bundled benefits like tenant liability insurance, deep cleaning (labor only), painting labor (walls only, paint by landlord), pest control (labor only), and product repairs (free labor, spares by landlord/tenant, limited to 6 visits/year), all provided once a year at no additional commission.
Key requirements:
•	Login is only allowed with phone number and OTP verification (no email or social login). Use Firebase Authentication for OTP via phone.
•	User profiles: 
o	Tenant: Search properties, book virtual tours, pay brokerage/rent/deposits, access services (movers, repairs, local business menus), view default rental agreements, participate in referral bonuses and neighborhood welcomes.
o	Landowner: List properties, enroll in Bajaj Finance FD for 0.25% extra interest on deposits, view tenant profiles, generate lease agreements, administer property IDs for taxes/bills.
o	Broker: Upload/show properties, split brokerage with platform, access marketplace model, manage listings with AI virtual tours.
o	Admin (back-end only): Moderate users, manage properties, oversee transactions, generate reports, update local business sheets and menus, handle neighborhood events.
•	Each property has a unique ID generated upon listing, linked to the landowner's user ID, tenant's ID (upon rental), and broker's ID (if involved). Use Firebase Firestore for database storage. Later, integrate APIs to use property ID for paying BBMP taxes, electricity, and water bills (e.g., integrate with BBMP, BESCOM, BWSSB APIs for payments).
•	App colors: Light blue (#ADD8E6) for backgrounds and accents, white (#FFFFFF) for text and cards.
•	Include all 28 strategies as features: 
1.	EMI Financing for Brokerage and Deposits (integrate payment gateway like Razorpay for EMI options).
2.	Property Management Services (dashboard for landowners to track maintenance).
3.	Charge Landlords a Platform Fee (5% of rent, configurable).
4.	Maintenance Packages (book repairs via app).
5.	Increase Tenant Coverage Beyond 50% (analytics dashboard to track and optimize).
6.	Referral Programs (bonus of 500 INR for tenants, 2,000 INR for landlords/brokers).
7.	Targeted Marketing Campaigns (in-app notifications for promotions).
8.	Premium Subscription Model (e.g., ad-free for 100 INR/month).
9.	Partner with Real Estate Developers (API integration for bulk listings).
10.	Tenant Perks (e.g., utility setup discounts).
11.	Expand to Adjacent Areas (location-based filters for Indiranagar, Koramangala, etc.).
12.	Commercial Rental Services (separate section for offices/shops).
13.	Data Analytics for Pricing Optimization (AI suggestions for rent pricing).
14.	Loyalty Program for Repeat Tenants (discounts on renewals).
15.	Offer Insurance Products (tenant liability, property damage via partners).
16.	Integrate Smart Home Solutions (links to IoT devices).
17.	Legal and Tax Assistance for Landlords (in-app chat with legal experts).
18.	Corporate Housing Program (bulk bookings for companies).
19.	Monetize App Data (anonymized insights for developers, with user consent).
20.	Move-In/Move-Out Services (checklists and bookings).
21.	Broker Marketplace Model (brokers upload/show properties, split brokerage).
22.	Partner with Bajaj Finance for 0.25% Extra Interest on Landlord FDs (integration for FD enrollment).
23.	Virtual Tour of the Property with an AI Agent (use ARCore/Matterport for 360° tours with AI narration).
24.	Mover and Packer Services (book via integrated partners like Urban Company).
25.	Referral Bonus (track referrals and payout via wallet).
26.	Welcome to Neighborhood with All Tenants in That Month (monthly events calendar in app).
27.	Provide a Sheet with Local Businesses and Menus (dynamic list in app with menus from Zomato API).
28.	Default Rental and Lease Agreements according to Indian laws (pre-drafted templates compliant with Indian Contract Act 1872, Transfer of Property Act 1882, Registration Act 1908, and state Rent Control Acts; customizable with e-signature).
•	Use Firebase for backend (Firestore for data, Authentication for OTP login, Cloud Functions for admin tasks).
•	Secure payments with Razorpay/Stripe for brokerage, rent, deposits.
•	Admin back-end: Web dashboard using Firebase Console or custom React admin panel for moderation.
•	Each property ID links to user IDs for transactions; integrate with BBMP/BESCOM/BWSSB APIs for tax/bill payments using property ID.
•	Ensure scalability, security (data encryption, GDPR/DPDP compliance), and no errors: Use error handling, unit tests, UI tests; validate all inputs; handle offline mode with Firebase offline support.
•	App structure: Bottom navigation (Home, Properties, Services, FD Offer, Profile); light blue backgrounds, white cards.
•	Build for Play Store: Signed AAB, privacy policy, assets included.
•	No bugs, clean code, optimize for performance. Test on API 21+.
Implement this step by step, starting with project setup, then login system, user profiles, property listing/ID system, features integration, and back-end admin. Provide code snippets and explain each part.

